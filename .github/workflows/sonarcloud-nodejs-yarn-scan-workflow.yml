name: SonarCloud Quality Code Analysis for Node.js with Yarn

on:
  workflow_call:
    inputs:
      sonar-project-key:
        required: false
        type: string
        description: "SonarCloud project key (required if sonar-project.properties does not exist)"
        default: ""
      sonar-organization:
        required: false
        type: string
        description: "SonarCloud organization (required if sonar-project.properties does not exist)"
        default: "n1co"
      env-name:
        required: true
        type: string
        description: "Environment name"
      node-version:
        required: false
        type: string
        description: "Node.js version"
        default: "18"
      build-path:
        required: false
        type: string
        description: "Path to build project"
        default: "."
      requires-gh-npm-config:
        description: "requires GitHub-NPM configuration"
        type: boolean
        required: false
        default: false
      registry-domain:
        description: "Domain of the npm registry to use"
        type: string
        required: false
        default: "npm.pkg.github.com"
      scope:
        description: "Scope of the npm packages to install"
        type: string
        required: false
        default: "@h4b-dev"
      gh-pat:
        description: "GitHub Personal Access Token"
        type: string
        required: false
        default: ""

jobs:
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env-name }}
    timeout-minutes: 30
    env:
      GH_PAT: ${{ inputs.gh-pat }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Set environment variables
        if: ${{ inputs.requires-gh-npm-config }}
        run: |
          export GH_PAT=$(echo $GH_PAT | base64 -di | base64 -di)
          echo ::add-mask::$GH_PAT
          echo "GH_PAT=$GH_PAT" >> $GITHUB_ENV

      - name: Set up NPM
        if: ${{ inputs.requires-gh-npm-config }}
        run: |
          touch .npmrc
          echo ${{ inputs.scope }}:registry=https://${{ inputs.registry-domain }} >> .npmrc
          echo //${{ inputs.registry-domain }}/:_authToken=${{ env.GH_PAT }} >> .npmrc

      - name: Install dependencies
        working-directory: ${{ inputs.build-path }}
        run: yarn install --frozen-lockfile

      - name: Run tests with coverage
        working-directory: ${{ inputs.build-path }}
        run: yarn test:coverage

      - name: Check for sonar-project.properties file
        id: check_sonar
        run: |
          if [[ -f "./sonar-project.properties" ]]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: SonarCloud Scan with sonar-project.properties
        if: steps.check_sonar.outputs.exists == 'true'
        uses: SonarSource/sonarcloud-github-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ inputs.build-path }}

      - name: SonarCloud Scan without sonar-project.properties
        if: steps.check_sonar.outputs.exists == 'false'
        uses: SonarSource/sonarcloud-github-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ inputs.build-path }}
          args: >
            -Dsonar.projectKey=${{ inputs.sonar-project-key }}
            -Dsonar.organization=${{ inputs.sonar-organization }}
            -Dsonar.sources=${{ inputs.build-path }}
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.test.inclusions=**/*.test.js,**/*.test.ts,**/*.spec.js,**/*.spec.ts
            -Dsonar.exclusions=/node_modules/,/coverage/,/dist/,/build/,.wrangler/,/.git/,/tests/,/src/test/**
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.javascript.file.suffixes=.js,.jsx
            -Dsonar.typescript.file.suffixes=.ts,.tsx

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-and-test-results
          path: |
            ${{ inputs.build-path }}/coverage
